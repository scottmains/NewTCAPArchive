@page "/login"
@layout EmptyLayout
@using System.Security.Claims
@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components.Authorization
@using System.Text.Json;

@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage

<h1>Login</h1>

<EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="loginModel.Email" />
    </div>
    <div>
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginModel.Password" type="password" />
    </div>

    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginViewModel loginModel = new LoginViewModel();

    private async Task HandleValidSubmit()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("/api/account/login", loginModel);
            response.EnsureSuccessStatusCode();

            // Deserialize the response
            var jsonResponse = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Raw JSON response: {jsonResponse}"); // Log the raw JSON response
            var jsonDocument = JsonDocument.Parse(jsonResponse);
            var token = jsonDocument.RootElement.GetProperty("token").GetString();

            await LocalStorage.SetItemAsStringAsync("authToken", token);

            NavigationManager.NavigateTo("/predators");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }
}
